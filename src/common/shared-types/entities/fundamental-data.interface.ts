import { SymbolEntity } from '../entities/symbol.interface';
import { FiscalReportType, MarketRegion } from '..';

export interface FundamentalDataEntity {
  id: string;
  symbolCode: string;
  reportDate: Date;
  fiscalYear: number;
  fiscalMonth?: number;
  reportType: FiscalReportType;
  revenue?: number;
  costOfGoodsSold?: number;
  grossProfit?: number;
  operatingExpenses?: number;
  operatingIncome?: number;
  interestExpense?: number;
  taxExpense?: number;
  incomeBeforeTax?: number;
  incomeTax?: number;
  netIncome?: number;
  ebitda?: number;
  eps?: number;
  dilutedEPS?: number;
  totalAssets?: number;
  currentAssets?: number;
  inventory?: number;
  accountsReceivable?: number;
  totalLiabilities?: number;
  currentLiabilities?: number;
  accountsPayable?: number;
  shareholdersEquity?: number;
  totalDebt?: number;
  longTermDebt?: number;
  shortTermDebt?: number;
  cashAndEquivalents?: number;
  workingCapital?: number;
  bookValuePerShare?: number;
  propertyPlantEquipment?: number;
  intangibleAssets?: number;
  retainedEarnings?: number;
  operatingCashFlow?: number;
  investingCashFlow?: number;
  financingCashFlow?: number;
  netCashFlow?: number;
  freeCashFlow?: number;
  capex?: number;
  debtIssuance?: number;
  debtRepayment?: number;
  dividendPayments?: number;
  sharesOutstanding?: number;
  marketCap?: number;
  dividendPerShare?: number;
  peRatio?: number;
  pbRatio?: number;
  roe?: number;
  roa?: number;
  debtToEquity?: number;
  currentRatio?: number;
  grossMargin?: number;
  operatingMargin?: number;
  netMargin?: number;
  dividendYield?: number;
  inventoryTurnover?: number;
  receivablesTurnover?: number;
  assetTurnover?: number;
  equityTurnover?: number;
  quickRatio?: number;
  cashRatio?: number;
  revenueGrowthYoy?: number;
  netIncomeGrowthYoy?: number;
  epsGrowthYoy?: number;
  dataSource?: string;
  lastUpdated?: Date;
  regionalData?: Record<string, unknown>;
  createdAt?: Date;
  updatedAt?: Date;
  exchangeArea: MarketRegion;
  symbolId: string;
  symbol: SymbolEntity;
}
